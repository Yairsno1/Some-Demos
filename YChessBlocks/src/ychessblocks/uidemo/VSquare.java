/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ychessblocks.uidemo;

import java.awt.Graphics;
import java.net.*;
import javax.swing.ImageIcon;
import javax.swing.JComponent;
import javax.swing.TransferHandler;

import ychessblocks.board.*;
import ychessblocks.piece.*;
import ychessblocks.position.*;

/**
 *
 * @author Yair
 */
public class VSquare extends javax.swing.JPanel
{
  private ISquare m_model;
  private GraphicsRepository m_imagesFactory;
  private ImageIcon m_bkg;
  private ImageIcon m_pieceImg;
  private ImageIcon m_pieceAsCursor;
  private String m_SAN;
  
  /**
   * Creates new form VSquare
   */
  public VSquare(ISquare model)
  {
    m_model = model;
    calcSAN();
    m_imagesFactory = GraphicsRepository.getInstance();
    m_bkg = m_imagesFactory.getSquareBkg(model);
    m_pieceImg = null;
    
    initComponents();
    setTransferHandler(new VSquareTransferHandler());
  }

  public void clear()
  {
    m_pieceImg = null;
    repaint();
  }
  
  public ISquare getModel()
  {
    return m_model;
  }

  public ImageIcon getPieceCursor()
  {
    return m_pieceAsCursor;  
  }
  
  public String getSAN()
  {
    return m_SAN;
  }
  
  public boolean isEmpty()
  {
    return (m_pieceImg == null);  
  }
  
  public void putPiece(IPosition pos)
  {
    IPiece p = pos.getPiece(m_model);
    m_pieceImg = (p != null) ? m_imagesFactory.createPieceImage(p) : null;
    m_pieceAsCursor = (p != null) ? m_imagesFactory.createPieceImage(p) : null;
  }
  
  private void calcSAN()
  {
    if (m_model.getFile().getVal().equals(IFile.ChessboardFile.FILEa))
    {
      m_SAN = "a";
    }
    else if (m_model.getFile().getVal().equals(IFile.ChessboardFile.FILEb))
    {
      m_SAN = "b";
    }
    else if (m_model.getFile().getVal().equals(IFile.ChessboardFile.FILEc))
    {
      m_SAN = "c";
    }
    else if (m_model.getFile().getVal().equals(IFile.ChessboardFile.FILEd))
    {
      m_SAN = "d";
    }
    else if (m_model.getFile().getVal().equals(IFile.ChessboardFile.FILEe))
    {
      m_SAN = "e";
    }
    else if (m_model.getFile().getVal().equals(IFile.ChessboardFile.FILEf))
    {
      m_SAN = "f";
    }
    else if (m_model.getFile().getVal().equals(IFile.ChessboardFile.FILEg))
    {
      m_SAN = "g";
    }
    else if (m_model.getFile().getVal().equals(IFile.ChessboardFile.FILEh))
    {
      m_SAN = "h";
    }

    if (m_model.getRank().getVal().equals(IRank.ChessboardRank.RANK1))
    {
      m_SAN += "1";
    }
    else if (m_model.getRank().getVal().equals(IRank.ChessboardRank.RANK2))
    {
      m_SAN += "2";
    }
    else if (m_model.getRank().getVal().equals(IRank.ChessboardRank.RANK3))
    {
      m_SAN += "3";
    }
    else if (m_model.getRank().getVal().equals(IRank.ChessboardRank.RANK4))
    {
      m_SAN += "4";
    }
    else if (m_model.getRank().getVal().equals(IRank.ChessboardRank.RANK5))
    {
      m_SAN += "5";
    }
    else if (m_model.getRank().getVal().equals(IRank.ChessboardRank.RANK6))
    {
      m_SAN += "6";
    }
    else if (m_model.getRank().getVal().equals(IRank.ChessboardRank.RANK7))
    {
      m_SAN += "7";
    }
    else if (m_model.getRank().getVal().equals(IRank.ChessboardRank.RANK8))
    {
      m_SAN += "8";
    }    
  }
  
  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
    setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
    addMouseListener(new java.awt.event.MouseAdapter() {
      public void mouseClicked(java.awt.event.MouseEvent evt) {
        formMouseClicked(evt);
      }
      public void mousePressed(java.awt.event.MouseEvent evt) {
        formMousePressed(evt);
      }
    });

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
    this.setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGap(0, 46, Short.MAX_VALUE)
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGap(0, 46, Short.MAX_VALUE)
    );
  }// </editor-fold>//GEN-END:initComponents

  private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
  }//GEN-LAST:event_formMouseClicked

  private void formMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMousePressed
    JComponent jc = (JComponent)evt.getSource();
    TransferHandler th = jc.getTransferHandler();
    th.exportAsDrag(jc, evt, TransferHandler.MOVE);
  }//GEN-LAST:event_formMousePressed

  // Variables declaration - do not modify//GEN-BEGIN:variables
  // End of variables declaration//GEN-END:variables


  @Override
  protected void paintComponent(Graphics g) 
  {    
    super.paintComponent(g); //To change body of generated methods, choose Tools | Templates.
    
    g.drawImage(m_bkg.getImage(), 0, 0, null);
    if (m_pieceImg != null)
    {
      int offsetX;
      int offsetY;
      offsetX = (this.getWidth() - m_pieceImg.getIconWidth()) / 2;
      offsetY = (this.getHeight() - m_pieceImg.getIconHeight()) / 2;      
      g.drawImage(m_pieceImg.getImage(), offsetX, offsetY, null);
    }
    //g.drawString(String.valueOf(m_val),
    //             this.getWidth()/2,this.getHeight()/2);   
  }
}
